// vite.config.ts
import { defineConfig } from "vite";
import vue from "@vitejs/plugin-vue";
import mkcert from "vite-plugin-mkcert";
import crossOriginIsolation from "vite-plugin-cross-origin-isolation";
import { quasar, transformAssetUrls } from "@quasar/vite-plugin";
import autoprefixer from "autoprefixer";
import tailwindcss from "tailwindcss";
import { env } from "node:process";
var vite_config_default = defineConfig({
  base: env.no_base ? void 0 : "u/",
  plugins: [
    vue({ template: { transformAssetUrls } }),
    quasar({
      sassVariables: "src/style/quasar-variables.sass"
    }),
    mkcert({
      force: true
    }),
    crossOriginIsolation()
  ],
  css: {
    postcss: {
      plugins: [tailwindcss, autoprefixer]
    }
  },
  define: {
    GLOBAL_env_no_base: !!env.no_base
  }
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCJEOlxcXFxyZXBvc1xcXFx4XFxcXHVcXFxcdVwiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiRDpcXFxccmVwb3NcXFxceFxcXFx1XFxcXHVcXFxcdml0ZS5jb25maWcudHNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL0Q6L3JlcG9zL3gvdS91L3ZpdGUuY29uZmlnLnRzXCI7aW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSBcInZpdGVcIjtcclxuaW1wb3J0IHZ1ZSBmcm9tIFwiQHZpdGVqcy9wbHVnaW4tdnVlXCI7XHJcbmltcG9ydCBta2NlcnQgZnJvbSBcInZpdGUtcGx1Z2luLW1rY2VydFwiO1xyXG5pbXBvcnQgY3Jvc3NPcmlnaW5Jc29sYXRpb24gZnJvbSBcInZpdGUtcGx1Z2luLWNyb3NzLW9yaWdpbi1pc29sYXRpb25cIjtcclxuXHJcbmltcG9ydCB7IHF1YXNhciwgdHJhbnNmb3JtQXNzZXRVcmxzIH0gZnJvbSBcIkBxdWFzYXIvdml0ZS1wbHVnaW5cIjtcclxuXHJcbmltcG9ydCBhdXRvcHJlZml4ZXIgZnJvbSBcImF1dG9wcmVmaXhlclwiO1xyXG5pbXBvcnQgdGFpbHdpbmRjc3MgZnJvbSBcInRhaWx3aW5kY3NzXCI7XHJcblxyXG5pbXBvcnQgeyBlbnYgfSBmcm9tIFwibm9kZTpwcm9jZXNzXCI7XHJcblxyXG4vLyBodHRwczovL3ZpdGVqcy5kZXYvY29uZmlnL1xyXG5leHBvcnQgZGVmYXVsdCBkZWZpbmVDb25maWcoe1xyXG4gIGJhc2U6IGVudi5ub19iYXNlID8gdW5kZWZpbmVkIDogXCJ1L1wiLFxyXG4gIHBsdWdpbnM6IFtcclxuICAgIHZ1ZSh7IHRlbXBsYXRlOiB7IHRyYW5zZm9ybUFzc2V0VXJscyB9IH0pLFxyXG4gICAgcXVhc2FyKHtcclxuICAgICAgc2Fzc1ZhcmlhYmxlczogXCJzcmMvc3R5bGUvcXVhc2FyLXZhcmlhYmxlcy5zYXNzXCIsXHJcbiAgICB9KSxcclxuICAgIG1rY2VydCh7XHJcbiAgICAgIGZvcmNlOiB0cnVlLFxyXG4gICAgfSksXHJcbiAgICBjcm9zc09yaWdpbklzb2xhdGlvbigpLFxyXG4gIF0sXHJcbiAgY3NzOiB7XHJcbiAgICBwb3N0Y3NzOiB7XHJcbiAgICAgIHBsdWdpbnM6IFt0YWlsd2luZGNzcywgYXV0b3ByZWZpeGVyXSxcclxuICAgIH0sXHJcbiAgfSxcclxuICBkZWZpbmU6IHtcclxuICAgIEdMT0JBTF9lbnZfbm9fYmFzZTogISFlbnYubm9fYmFzZSxcclxuICB9LFxyXG59KTtcclxuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUFzTyxTQUFTLG9CQUFvQjtBQUNuUSxPQUFPLFNBQVM7QUFDaEIsT0FBTyxZQUFZO0FBQ25CLE9BQU8sMEJBQTBCO0FBRWpDLFNBQVMsUUFBUSwwQkFBMEI7QUFFM0MsT0FBTyxrQkFBa0I7QUFDekIsT0FBTyxpQkFBaUI7QUFFeEIsU0FBUyxXQUFXO0FBR3BCLElBQU8sc0JBQVEsYUFBYTtBQUFBLEVBQzFCLE1BQU0sSUFBSSxVQUFVLFNBQVk7QUFBQSxFQUNoQyxTQUFTO0FBQUEsSUFDUCxJQUFJLEVBQUUsVUFBVSxFQUFFLG1CQUFtQixFQUFFLENBQUM7QUFBQSxJQUN4QyxPQUFPO0FBQUEsTUFDTCxlQUFlO0FBQUEsSUFDakIsQ0FBQztBQUFBLElBQ0QsT0FBTztBQUFBLE1BQ0wsT0FBTztBQUFBLElBQ1QsQ0FBQztBQUFBLElBQ0QscUJBQXFCO0FBQUEsRUFDdkI7QUFBQSxFQUNBLEtBQUs7QUFBQSxJQUNILFNBQVM7QUFBQSxNQUNQLFNBQVMsQ0FBQyxhQUFhLFlBQVk7QUFBQSxJQUNyQztBQUFBLEVBQ0Y7QUFBQSxFQUNBLFFBQVE7QUFBQSxJQUNOLG9CQUFvQixDQUFDLENBQUMsSUFBSTtBQUFBLEVBQzVCO0FBQ0YsQ0FBQzsiLAogICJuYW1lcyI6IFtdCn0K
